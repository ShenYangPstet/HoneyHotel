<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.photonstudio.mapper.SmsLogMapper">
	<select id="findObject" resultType="SmsLog">
		select * from `${dBname}`.sms_log
		<where>
			1=1
			<if test="startTime!=null">
				and a.time &gt;= #{startTime}
			</if>
			<if test="endTime!=null">
				and a.time &lt;= #{endTime}
			</if>
		</where>
		<if test="pageSize!=null">
			limit #{startIndex},#{pageSize}
		</if>
	</select>
	<select id="getRowCount" resultType="int">
		select count(*) from `${dBname}`.qs_ld_log
		<where>
			1=1
			<if test="startTime!=null">
				and a.time &gt;= #{startTime}
			</if>
			<if test="endTime!=null">
				and a.time &lt;= #{endTime}
			</if>
		</where>
	</select>
	<delete id="deleteObjectById">
		delete from `${dBname}`.sms_log
		<where>
			id in
			<foreach collection="ids" open="(" close=")" separator=","
				item="id">
				#{id}
			</foreach>
		</where>
	</delete>
	<insert id="insertObject">
		insert into `${dBname}`.sms_log
		(sendtime,sendphone,sendcontent,sendname,sendstate)
		values (now(),#{smsLog.sendphone},#{smsLog.sendcontent},#{smsLog.sendname},
		#{smsLog.sendstate})
	</insert>
	<update id="updateObject">
		update `${dBname}`.sms_log
		<set>
			sendtime=#{smsLog.sendtime},
			sendphone=#{smsLog.sendphone},
			sendcontent=#{smsLog.sendcontent},
			sendname=#{smsLog.sendname},
			sendstate=#{smsLog.sendstate}
		</set>
		<where>
			id=#{id}
		</where>
	</update>
</mapper>