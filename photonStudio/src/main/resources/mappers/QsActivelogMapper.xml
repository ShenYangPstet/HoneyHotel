<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.photonstudio.mapper.QsActivelogMapper">
	<select id="findObject" resultType="com.photonstudio.pojo.QsActivelog">
	select a.*,b.drtypename from `${dBname}`.qs_activelog a left join 
	`${dBname}`.drtypeinfo b on a.dr_typeid=b.drtypeid
	<where>
	1=1
	<if test="username!=null and username!=''">
		and user_name like concat("%",#{username},"%") 
	</if>
	<if test="startTime!=null">
	   and time &gt;= #{startTime}  
	</if>
	<if test="endTime!=null"> 
	   and time &lt;= #{endTime} 
	</if>
	</where>
	<if test="pageSize!=null and pageSize!=''">
	limit #{startIndex},#{pageSize}
    </if>
	</select>
	<select id="getRowCount" resultType="int">
	select count(*) from `${dBname}`.qs_activelog
	<where>
	1=1
	<if test="username!=null and username!=''">
		and user_name like concat("%",#{username},"%") 
	</if>
	<if test="startTime!=null">
	   and time &gt;= #{startTime}  
	</if>
	<if test="endTime!=null"> 
	   and time &lt;= #{endTime} 
	</if>
	</where>
	</select>
	<insert id="insertObject">
	   insert into `${dBname}`.qs_activelog (time,user_name,dr_typeid,
	   dr_name,reg_name,reg_newvalue) values (#{qsActivelog.time},
	  #{qsActivelog.userName},#{qsActivelog.drTypeid},#{qsActivelog.drName},
	  #{qsActivelog.regName},#{qsActivelog.regNewvalue} )
	</insert>
	<delete id="deleteObjectById">
		delete from `${dBname}`.qs_activelog 
		<where>
		activelog_id in<foreach collection="ids" open="("
                close=")"
                separator=","
                item="id">
                #{id}
         </foreach> 
	</where>
	</delete>
	<update id="updateObject">
	update `${dBname}`.qs_activelog 
	<set>
	<if test="qsActivelog.time!=null">
	time=#{qsActivelog.time},
	</if>
	<if test="qsActivelog.userName!=null and qsActivelog.userName!=''">
	user_name=#{qsActivelog.userName},
	</if>
	<if test="qsActivelog.drTypeid!=null and qsActivelog.drTypeid!=''">
	dr_typeid=#{qsActivelog.drTypeid},
	</if>
	<if test="qsActivelog.drName!=null and qsActivelog.drName!=''">
	dr_name=#{qsActivelog.drName},
	</if>
	<if test="qsActivelog.regName!=null and qsActivelog.regName!=''">
	reg_name=#{qsActivelog.regName},
	</if>
	<if test="qsActivelog.regNewvalue!=null and qsActivelog.regNewvalue!=''">
	reg_newvalue=#{qsActivelog.regNewvalue},
	</if>
	activelog_id=#{qsActivelog.activelogId}
	</set>
	<where>
	activelog_id=#{qsActivelog.activelogId}
	</where>
	</update>
</mapper>